= Time.now.in_time_zone("UTC")
= form_tag '#', :method => 'get' do
  = label_tag :airport1, "Выбрать город 1:"
  = select_tag :d_ap1, options_from_collection_for_select(Town.where(country_id: 528).town_with_ap.order(:city_rus), "id", "city_rus", params[:d_ap1]), prompt: "All Town"
  %br
  = label_tag :radius, "Выбрать город 2:"
  = select_tag :d_ap2, options_from_collection_for_select(Town.where(country_id: 528).town_with_ap.order(:city_rus), "id", "city_rus", params[:d_ap2]), prompt: "All Town"
  %br
  = submit_tag "Search", :name => nil
-if params[:d_ap1] != '' && params[:d_ap1] &&  params[:d_ap2] != '' && params[:d_ap2]
  - @airport1 = Town.find(params[:d_ap1]).airports.first
  - @airport2 = Town.find(params[:d_ap2]).airports.first
  = dist = @airport2.distance_from(@airport1, :units=>:kms)
  %br
  - @airports1_r300 = Town.where(country_id: 528).town_with_ap.within(300, :origin => @airport1)
  - @airports2_r300 = Town.where(country_id: 528).town_with_ap.within(300, :origin => @airport2)
  - @airports1 = Town.where(country_id: 528).town_with_ap.within(dist, :origin => @airport1)
  - @airports2 = Town.where(country_id: 528).town_with_ap.within(dist, :origin => @airport2)
  - @airports = @airports1 & @airports2 + @airports1_r300 + @airports2_r300
  - @airports.each do |a|
    - @tt1 = Timetableap.search_starttw(params[:d_ap1]).search_endtw(a.id)
    - @tt2 = Timetableap.search_endtw(params[:d_ap2]).search_starttw(a.id)
    - unless @tt1.blank? or @tt2.blank?
      %h5 Транзит через город #{a.city_rus} (#{a.accent_city})
    - @tt1.each do |tt1|
      - @tt2.each do |tt2|
        #{tt1.aircompany.iata_code} #{tt1.flight_number}
        #{@airport1.city_rus} (#{tt1.airport_start.name_rus}) - #{a.city_rus} (#{tt1.airport_finish.name_rus})  || 
        #{tt1.timeStart.in_time_zone(tt1.airport_start.time_zone).to_s(:time)} - #{tt1.timeEnd.in_time_zone(tt1.airport_finish.time_zone).to_s(:time)} ||
        - tt1.timeStart = tt1.timeStart.change(:year=>Time.now.in_time_zone("UTC").year, :month=>Time.now.in_time_zone("UTC").month, :day=>Time.now.in_time_zone("UTC").day)
        - tt1.timeEnd = tt1.timeEnd.change(:year=>Time.now.in_time_zone("UTC").year, :month=>Time.now.in_time_zone("UTC").month, :day=>Time.now.in_time_zone("UTC").day)
        - tt2.timeStart = tt2.timeStart.change(:year=>Time.now.in_time_zone("UTC").year, :month=>Time.now.in_time_zone("UTC").month, :day=>Time.now.in_time_zone("UTC").day)
        - tt2.timeEnd = tt2.timeEnd.change(:year=>Time.now.in_time_zone("UTC").year, :month=>Time.now.in_time_zone("UTC").month, :day=>Time.now.in_time_zone("UTC").day)
        - if tt1.timeStart > tt2.timeStart
          - tt2.timeStart = tt2.timeStart + 24.hour
          - tt2.timeEnd = tt2.timeEnd + 24.hour
        - if tt2.timeStart - tt1.timeEnd > 24.hour
          - tt2.timeStart = tt2.timeStart - 24.hour
          - tt2.timeEnd = tt2.timeEnd - 24.hour
        - if tt1.timeStart < tt1.timeEnd
          = Time.diff(Time.parse(tt1.timeStart.to_s), Time.parse(tt1.timeEnd.to_s), '%H %N')[:diff]
        - else
          - tt1.timeEnd = tt1.timeEnd + 24.hour
          = Time.diff(Time.parse(tt1.timeStart.to_s), Time.parse(tt1.timeEnd.to_s), '%H %N')[:diff]
        %br
        Время для транзита: 
        - if tt2.timeStart > tt1.timeEnd
          = Time.diff(Time.parse(tt2.timeStart.to_s), Time.parse(tt1.timeEnd.to_s), '%H %N')[:diff]
        - else
          - tt2.timeStart = tt2.timeStart + 24.hour
          - tt2.timeEnd = tt2.timeEnd + 24.hour
          = Time.diff(Time.parse(tt2.timeStart.to_s), Time.parse(tt1.timeEnd.to_s), '%H %N')[:diff]
        %br
        #{tt2.aircompany.iata_code} #{tt2.flight_number}
        #{a.city_rus} (#{tt2.airport_start.name_rus}) - #{@airport2.city_rus} (#{tt2.airport_finish.name_rus})  #{tt2.timeStart.in_time_zone(tt2.airport_start.time_zone).to_s(:time)} - #{tt2.timeEnd.in_time_zone(tt2.airport_finish.time_zone).to_s(:time)} || 
        - if tt2.timeStart < tt2.timeEnd
          = Time.diff(Time.parse(tt2.timeStart.to_s), Time.parse(tt2.timeEnd.to_s), '%H %N')[:diff]
        - else
          - tt2.timeEnd = tt2.timeEnd + 24.hour
          = Time.diff(Time.parse(tt2.timeStart.to_s), Time.parse(tt2.timeEnd.to_s), '%H %N')[:diff]
        %br
        %b Общее время в пути:
        - if tt1.timeStart < tt2.timeEnd
          = Time.diff(Time.parse(tt1.timeStart.to_s), Time.parse(tt2.timeEnd.to_s), '%H %N')[:diff]
        - else
          - tt2.timeEnd = tt2.timeEnd + 24.hour
          = Time.diff(Time.parse(tt1.timeStart.to_s), Time.parse(tt2.timeEnd.to_s), '%H %N')[:diff]

        %hr
