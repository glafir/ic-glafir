:javascript
  $(document).ready(function(){
    $("#tt").tablesorter({
      widgets: ["zebra"],
      sortList:[[2,0]]
     });
  });
= render "timetableaps/paginate_top"
%table#tt.tt.table-striped.table-hover.table-condensed
  %thead
    %tr
      %th Flight number
      %th{width: 120} Way start
      %th Timestart
      %th{width: 120} Way end
      %th Timeend
      %th{width: 90} Navigation
      %th Время в пути
      %th
  %tbody
    - @timetableaps.each do |timetableap|
      %tr
        %td
          %span.glyphicon.glyphicon-plane
          = timetableap.aircompany.iata_code
          = timetableap.Flight_Number
        %td
          = timetableap.airport.town.city_rus
          = succeed "(" do
            %br/
          = link_to timetableap.airport.name_rus, timetableap.airport
          )
        %td= timetableap.TimeStart.in_time_zone(timetableap.airport.time_zone).to_s(:time)
        %td
          = timetableap.apkey.airport.town.city_rus
          = succeed "(" do
            %br/
          = link_to timetableap.apkey.airport.name_rus, timetableap.apkey.airport
          )
        %td= timetableap.TimeEnd.in_time_zone(timetableap.apkey.airport.time_zone).to_s(:time)
        - if timetableap.DateOfEndNav <= Date.current
          - bgcolor = "#550C1A"
        - elsif timetableap.DateOfEndNav > Date.current + 2.month and timetableap.DateOfEndNav < Date.current + 4.month
          - bgcolor = "#547C1A"
        - elsif timetableap.DateOfEndNav > Date.current + 1.month and timetableap.DateOfEndNav < Date.current + 2.month
          - bgcolor = "#544C1A"
        - elsif timetableap.DateOfEndNav >  Date.current and timetableap.DateOfEndNav < Date.current + 1.month
          - bgcolor = "#541C1A"
        %td{:bgcolor => bgcolor, width: 140}
          = timetableap.DateOfStartNav.to_s(:long)
          %br
          = timetableap.DateOfEndNav.to_s(:long)
        %td
          - if timetableap.TimeStart < timetableap.TimeEnd
            = Time.diff(Time.parse(timetableap.TimeStart.to_s), Time.parse(timetableap.TimeEnd.to_s), '%H %N')[:diff]
          - else
            - timetableap.TimeEnd = timetableap.TimeEnd + 24.hour
            = Time.diff(Time.parse(timetableap.TimeStart.to_s), Time.parse(timetableap.TimeEnd.to_s), '%H %N')[:diff]
        %td
          - if policy(timetableap).update_dateoffinishdate?
            = link_to update_dateoffinishdate_timetableap_path(timetableap), remote: true do
              %span.glyphicon.glyphicon-certificate
          - if policy(timetableap.timetableap_subs).new?
            = link_to new_timetableap_sub_path(timetableap.id) do
              %span.glyphicon.glyphicon-plus #{timetableap.id}
              %br
          - if policy(timetableap).edit?
            = link_to edit_timetableap_path(timetableap) do
              %span.glyphicon.glyphicon-edit
          - if policy(timetableap).destroy?
            = link_to timetableap, method: :delete, data: { confirm: 'Are you sure?' } do
              %span.glyphicon.glyphicon-remove-circle
= render "timetableaps/paginate_bottom"
= link_to 'Добавить основной авиарейс', new_timetableap_path
