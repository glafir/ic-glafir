#new_tt
  = form_for @timetableap, validate: true do |f|
    - if @timetableap.errors.any?
      #error_explanation
        %h2
          = pluralize(@timetableap.errors.count, "error")
          prohibited this timetableap from being saved:
        %ul
          - @timetableap.errors.full_messages.each do |msg|
            %li= msg
    .field
      = f.label :Flight_Number
      - if params[:Flight_Number].blank?
        = f.number_field :Flight_Number, autofocus: true
      - else
        = f.number_field :Flight_Number, :value => ((params[:Flight_Number]).to_i + 1).to_s
    - if current_user.alclient?
      = f.hidden_field :aircompany_id, :value => current_user.aircompany_id.to_s
      .field
        = f.label "aircompany"
        = text_field_tag "aircompany", current_user.aircompany.airline_name_rus, disabled: true
    - else
      .field
        = f.label "aircompany"
        - if params[:aircompany_id].blank?
          = f.collection_select :aircompany_id, Aircompany.where(al_finish: nil).order(:airline_name_rus), :id, :airline_name_rus.to_s
        - else
          = f.collection_select :aircompany_id, Aircompany.where(al_finish: nil).order(:airline_name_rus), :id, :airline_name_rus.to_s, :selected => params[:aircompany_id]
    .field
      = f.label :way_start
      = autocomplete_field_tag 'start', '', autocomplete_airport_name_rus_airports_path,  'data-auto-focus' => true, :update_elements => {:id => '#timetableap_way_start'}, :value => params[:start]
      = f.hidden_field :way_start, value: params[:way_end]
    .field
      = f.label :way_end
      = autocomplete_field_tag 'end', '', autocomplete_airport_name_rus_airports_path,  'data-auto-focus' => true, :update_elements => {:id => '#timetableap_way_end'}, :value => params[:end]
      = f.hidden_field :way_end, value: params[:way_start]
    .field
      = f.label :TermStart
      = f.text_field :TermStart
    .field
      = f.label :GateStart
      = f.text_field :GateStart
    .field
      = f.label :TermEnd
      = f.text_field :TermEnd
    .field
      = f.label :GateEnd
      = f.text_field :GateEnd
    .field
      = f.label :aircraft_id
      - if params[:aircraft_id].blank?
        = f.collection_select :aircraft_id, Aircraft.order(:aircraft_company_id).order(:aircraft_model), :id, :aircraft_model
      - else
        = f.collection_select :aircraft_id, Aircraft.order(:aircraft_company_id).order(:aircraft_model), :id, :aircraft_model, :selected => params[:aircraft_id]
    .field
      = f.label :TimeStart
      = f.time_select :TimeStart, {minute_step: 5}
    .field
      = f.label :TimeEnd
      = f.time_select :TimeEnd, {minute_step: 5}
    .field
      = f.label :DateOfStartNav
      - if params[:DateOfStartNav].blank?
        = f.text_field :DateOfStartNav, size: 8
      - else
        = f.text_field :DateOfStartNav, size: 8, value: params[:DateOfStartNav]
    .field
      = f.label :DateOfEndNav
      - if params[:DateOfEndNav].blank?
        = f.text_field :DateOfEndNav, size: 8
      - else
        = f.text_field :DateOfEndNav, size: 8, value: params[:DateOfEndNav]
    .field
      = f.label "Mon"
      - if params[:s1] != "1"
        = f.check_box(:s1,{},1,0)
      - else
        = f.check_box(:s1,{checked: "checked"},1,0)
      - if params[:e1] != "1"
        = f.check_box(:e1,{},1,0)
      - else
        = f.check_box(:e1,{checked: "checked"},1,0)
    .field
      = f.label "Tue"
      - if params[:s2] != "1"
        = f.check_box(:s2,{},1,0)
      - else
        = f.check_box(:s2,{checked: "checked"},1,0)
      - if params[:e2] != "1"
        = f.check_box(:e2,{},1,0)
      - else
        = f.check_box(:e2,{checked: "checked"},1,0)
    .field
      = f.label "Wen"
      - if params[:s3] != "1"
        = f.check_box(:s3,{},1,0)
      - else
        = f.check_box(:s3,{checked: "checked"},1,0)
      - if params[:e3] != "1"
        = f.check_box(:e3,{},1,0)
      - else
        = f.check_box(:e3,{checked: "checked"},1,0)
    .field
      = f.label "The"
      - if params[:s4] != "1"
        = f.check_box(:s4,{},1,0)
      - else
        = f.check_box(:s4,{checked: "checked"},1,0)
      - if params[:e4] != "1"
        = f.check_box(:e4,{},1,0)
      - else
        = f.check_box(:e4,{checked: "checked"},1,0)
    .field
      = f.label "Fri"
      - if params[:s5] != "1"
        = f.check_box(:s5,{},1,0)
      - else
        = f.check_box(:s5,{checked: "checked"},1,0)
      - if params[:e5] != "1"
        = f.check_box(:e5,{},1,0)
      - else
        = f.check_box(:e5,{checked: "checked"},1,0)
    .field
      = f.label "Sat"
      - if params[:s6] != "1"
        = f.check_box(:s6,{},1,0)
      - else
        = f.check_box(:s6,{checked: "checked"},1,0)
      - if params[:e6] != "1"
        = f.check_box(:e6,{},1,0)
      - else
        = f.check_box(:e6,{checked: "checked"},1,0)
    .field
      = f.label "Sun"
      - if params[:s0] != "1"
        = f.check_box(:s0,{},1,0)
      - else
        = f.check_box(:s0,{checked: "checked"},1,0)
      - if params[:e0] != "1"
        = f.check_box(:e0,{},1,0)
      - else
        = f.check_box(:e0,{checked: "checked"},1,0)
    .actions
      = f.submit
    :javascript
      var elems = Array.prototype.slice.call(document.querySelectorAll("input[type=checkbox]"));
          elems.forEach(function(elem) {
          var switchery = new Switchery(elem,{
      //	  color: '#00a1d2',
      //	  jackColor: '#22c3f3',
      //        secondaryColor: '#505050',
      //	  jackSecondaryColor: '#606060'
      	});
      });
